<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd">

       <context:component-scan base-package="com.atMrChen">
              <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
       </context:component-scan>
       <!--       spring的配置文件，这里主要配置和业务逻辑有关的-->
       <!--       数据源，事务控制-->
       <context:property-placeholder location="classpath:jdbc.properties"/>
       <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
              <property name="jdbcUrl" value="${jdbc.url}"/>
              <property name="driverClass" value="${jdbc.driver}"/>
              <property name="user" value="${jdbc.username}"/>
              <property name="password" value="${jdbc.password}"/>
       </bean>
       <!--       配置和mybatis文件整合-->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="configLocation" value="classpath:mybatis-config.xml"/>
              <property name="dataSource" ref="pooledDataSource"/>
              <property name="mapperLocations" value="classpath:mappers/*.xml"/>
       </bean>
       <!--       配置扫描器，将mybatis接口的实现加入到ioc容器中-->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <!--              扫描所有dao接口的实现，加入到ioc中-->
              <property name="basePackage" value="com.atMrChen.mapper"/>
       </bean>
<!--       &lt;!&ndash;       事务控制的配置&ndash;&gt;-->
<!--       <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--       &lt;!&ndash;              控制数据源&ndash;&gt;-->
<!--              <property name="dataSource" ref="pooledDataSource"/>-->
<!--       </bean>-->
<!--       &lt;!&ndash;              开启基于注解的事务，使用xml形式的事务(必要主要的都是使用配置式)&ndash;&gt;-->
<!--       <aop:config>-->
<!--              <aop:pointcut  expression="execution(* com.atMrChen.service..*(..))" id="txAdvi"/>-->
<!--              <aop:advisor advice-ref="txAdvice" pointcut-ref="txAdvi"/>-->
<!--       </aop:config>-->
<!--       &lt;!&ndash;       配置事务增强，事务如何切入&ndash;&gt;-->
<!--       <tx:advice id="txAdvice">-->
<!--              <tx:attributes>-->
<!--                     <tx:method name="*"/>-->
<!--                     <tx:method name="get*" read-only="true"/>-->
<!--              </tx:attributes>-->
<!--       </tx:advice>-->
</beans>